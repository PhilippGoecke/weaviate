//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// AddRoleOKCode is the HTTP code returned for type AddRoleOK
const AddRoleOKCode int = 200

/*
AddRoleOK Role assigned successfully

swagger:response addRoleOK
*/
type AddRoleOK struct {
}

// NewAddRoleOK creates AddRoleOK with default headers values
func NewAddRoleOK() *AddRoleOK {

	return &AddRoleOK{}
}

// WriteResponse to the client
func (o *AddRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddRoleBadRequestCode is the HTTP code returned for type AddRoleBadRequest
const AddRoleBadRequestCode int = 400

/*
AddRoleBadRequest Bad request

swagger:response addRoleBadRequest
*/
type AddRoleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddRoleBadRequest creates AddRoleBadRequest with default headers values
func NewAddRoleBadRequest() *AddRoleBadRequest {

	return &AddRoleBadRequest{}
}

// WithPayload adds the payload to the add role bad request response
func (o *AddRoleBadRequest) WithPayload(payload *models.ErrorResponse) *AddRoleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role bad request response
func (o *AddRoleBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddRoleUnauthorizedCode is the HTTP code returned for type AddRoleUnauthorized
const AddRoleUnauthorizedCode int = 401

/*
AddRoleUnauthorized Unauthorized or invalid credentials.

swagger:response addRoleUnauthorized
*/
type AddRoleUnauthorized struct {
}

// NewAddRoleUnauthorized creates AddRoleUnauthorized with default headers values
func NewAddRoleUnauthorized() *AddRoleUnauthorized {

	return &AddRoleUnauthorized{}
}

// WriteResponse to the client
func (o *AddRoleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// AddRoleForbiddenCode is the HTTP code returned for type AddRoleForbidden
const AddRoleForbiddenCode int = 403

/*
AddRoleForbidden Forbidden

swagger:response addRoleForbidden
*/
type AddRoleForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddRoleForbidden creates AddRoleForbidden with default headers values
func NewAddRoleForbidden() *AddRoleForbidden {

	return &AddRoleForbidden{}
}

// WithPayload adds the payload to the add role forbidden response
func (o *AddRoleForbidden) WithPayload(payload *models.ErrorResponse) *AddRoleForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role forbidden response
func (o *AddRoleForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddRoleNotFoundCode is the HTTP code returned for type AddRoleNotFound
const AddRoleNotFoundCode int = 404

/*
AddRoleNotFound role is not found.

swagger:response addRoleNotFound
*/
type AddRoleNotFound struct {
}

// NewAddRoleNotFound creates AddRoleNotFound with default headers values
func NewAddRoleNotFound() *AddRoleNotFound {

	return &AddRoleNotFound{}
}

// WriteResponse to the client
func (o *AddRoleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// AddRoleInternalServerErrorCode is the HTTP code returned for type AddRoleInternalServerError
const AddRoleInternalServerErrorCode int = 500

/*
AddRoleInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response addRoleInternalServerError
*/
type AddRoleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewAddRoleInternalServerError creates AddRoleInternalServerError with default headers values
func NewAddRoleInternalServerError() *AddRoleInternalServerError {

	return &AddRoleInternalServerError{}
}

// WithPayload adds the payload to the add role internal server error response
func (o *AddRoleInternalServerError) WithPayload(payload *models.ErrorResponse) *AddRoleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add role internal server error response
func (o *AddRoleInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
