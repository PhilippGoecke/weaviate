//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/weaviate/weaviate/entities/models"
)

// GetUserRolesOrRoleUsersReader is a Reader for the GetUserRolesOrRoleUsers structure.
type GetUserRolesOrRoleUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRolesOrRoleUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRolesOrRoleUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserRolesOrRoleUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUserRolesOrRoleUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserRolesOrRoleUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserRolesOrRoleUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserRolesOrRoleUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserRolesOrRoleUsersOK creates a GetUserRolesOrRoleUsersOK with default headers values
func NewGetUserRolesOrRoleUsersOK() *GetUserRolesOrRoleUsersOK {
	return &GetUserRolesOrRoleUsersOK{}
}

/*
GetUserRolesOrRoleUsersOK describes a response with status code 200, with default header values.

Role assigned users
*/
type GetUserRolesOrRoleUsersOK struct {
	Payload *GetUserRolesOrRoleUsersOKBody
}

// IsSuccess returns true when this get user roles or role users o k response has a 2xx status code
func (o *GetUserRolesOrRoleUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user roles or role users o k response has a 3xx status code
func (o *GetUserRolesOrRoleUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users o k response has a 4xx status code
func (o *GetUserRolesOrRoleUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user roles or role users o k response has a 5xx status code
func (o *GetUserRolesOrRoleUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user roles or role users o k response a status code equal to that given
func (o *GetUserRolesOrRoleUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user roles or role users o k response
func (o *GetUserRolesOrRoleUsersOK) Code() int {
	return 200
}

func (o *GetUserRolesOrRoleUsersOK) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersOK  %+v", 200, o.Payload)
}

func (o *GetUserRolesOrRoleUsersOK) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersOK  %+v", 200, o.Payload)
}

func (o *GetUserRolesOrRoleUsersOK) GetPayload() *GetUserRolesOrRoleUsersOKBody {
	return o.Payload
}

func (o *GetUserRolesOrRoleUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserRolesOrRoleUsersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRolesOrRoleUsersBadRequest creates a GetUserRolesOrRoleUsersBadRequest with default headers values
func NewGetUserRolesOrRoleUsersBadRequest() *GetUserRolesOrRoleUsersBadRequest {
	return &GetUserRolesOrRoleUsersBadRequest{}
}

/*
GetUserRolesOrRoleUsersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUserRolesOrRoleUsersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get user roles or role users bad request response has a 2xx status code
func (o *GetUserRolesOrRoleUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user roles or role users bad request response has a 3xx status code
func (o *GetUserRolesOrRoleUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users bad request response has a 4xx status code
func (o *GetUserRolesOrRoleUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user roles or role users bad request response has a 5xx status code
func (o *GetUserRolesOrRoleUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user roles or role users bad request response a status code equal to that given
func (o *GetUserRolesOrRoleUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user roles or role users bad request response
func (o *GetUserRolesOrRoleUsersBadRequest) Code() int {
	return 400
}

func (o *GetUserRolesOrRoleUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserRolesOrRoleUsersBadRequest) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserRolesOrRoleUsersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserRolesOrRoleUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRolesOrRoleUsersUnauthorized creates a GetUserRolesOrRoleUsersUnauthorized with default headers values
func NewGetUserRolesOrRoleUsersUnauthorized() *GetUserRolesOrRoleUsersUnauthorized {
	return &GetUserRolesOrRoleUsersUnauthorized{}
}

/*
GetUserRolesOrRoleUsersUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type GetUserRolesOrRoleUsersUnauthorized struct {
}

// IsSuccess returns true when this get user roles or role users unauthorized response has a 2xx status code
func (o *GetUserRolesOrRoleUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user roles or role users unauthorized response has a 3xx status code
func (o *GetUserRolesOrRoleUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users unauthorized response has a 4xx status code
func (o *GetUserRolesOrRoleUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user roles or role users unauthorized response has a 5xx status code
func (o *GetUserRolesOrRoleUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get user roles or role users unauthorized response a status code equal to that given
func (o *GetUserRolesOrRoleUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get user roles or role users unauthorized response
func (o *GetUserRolesOrRoleUsersUnauthorized) Code() int {
	return 401
}

func (o *GetUserRolesOrRoleUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersUnauthorized ", 401)
}

func (o *GetUserRolesOrRoleUsersUnauthorized) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersUnauthorized ", 401)
}

func (o *GetUserRolesOrRoleUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserRolesOrRoleUsersForbidden creates a GetUserRolesOrRoleUsersForbidden with default headers values
func NewGetUserRolesOrRoleUsersForbidden() *GetUserRolesOrRoleUsersForbidden {
	return &GetUserRolesOrRoleUsersForbidden{}
}

/*
GetUserRolesOrRoleUsersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetUserRolesOrRoleUsersForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get user roles or role users forbidden response has a 2xx status code
func (o *GetUserRolesOrRoleUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user roles or role users forbidden response has a 3xx status code
func (o *GetUserRolesOrRoleUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users forbidden response has a 4xx status code
func (o *GetUserRolesOrRoleUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user roles or role users forbidden response has a 5xx status code
func (o *GetUserRolesOrRoleUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get user roles or role users forbidden response a status code equal to that given
func (o *GetUserRolesOrRoleUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get user roles or role users forbidden response
func (o *GetUserRolesOrRoleUsersForbidden) Code() int {
	return 403
}

func (o *GetUserRolesOrRoleUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetUserRolesOrRoleUsersForbidden) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetUserRolesOrRoleUsersForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserRolesOrRoleUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRolesOrRoleUsersNotFound creates a GetUserRolesOrRoleUsersNotFound with default headers values
func NewGetUserRolesOrRoleUsersNotFound() *GetUserRolesOrRoleUsersNotFound {
	return &GetUserRolesOrRoleUsersNotFound{}
}

/*
GetUserRolesOrRoleUsersNotFound describes a response with status code 404, with default header values.

no role found for user/key
*/
type GetUserRolesOrRoleUsersNotFound struct {
}

// IsSuccess returns true when this get user roles or role users not found response has a 2xx status code
func (o *GetUserRolesOrRoleUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user roles or role users not found response has a 3xx status code
func (o *GetUserRolesOrRoleUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users not found response has a 4xx status code
func (o *GetUserRolesOrRoleUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user roles or role users not found response has a 5xx status code
func (o *GetUserRolesOrRoleUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user roles or role users not found response a status code equal to that given
func (o *GetUserRolesOrRoleUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user roles or role users not found response
func (o *GetUserRolesOrRoleUsersNotFound) Code() int {
	return 404
}

func (o *GetUserRolesOrRoleUsersNotFound) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersNotFound ", 404)
}

func (o *GetUserRolesOrRoleUsersNotFound) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersNotFound ", 404)
}

func (o *GetUserRolesOrRoleUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserRolesOrRoleUsersInternalServerError creates a GetUserRolesOrRoleUsersInternalServerError with default headers values
func NewGetUserRolesOrRoleUsersInternalServerError() *GetUserRolesOrRoleUsersInternalServerError {
	return &GetUserRolesOrRoleUsersInternalServerError{}
}

/*
GetUserRolesOrRoleUsersInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type GetUserRolesOrRoleUsersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get user roles or role users internal server error response has a 2xx status code
func (o *GetUserRolesOrRoleUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user roles or role users internal server error response has a 3xx status code
func (o *GetUserRolesOrRoleUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user roles or role users internal server error response has a 4xx status code
func (o *GetUserRolesOrRoleUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user roles or role users internal server error response has a 5xx status code
func (o *GetUserRolesOrRoleUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user roles or role users internal server error response a status code equal to that given
func (o *GetUserRolesOrRoleUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user roles or role users internal server error response
func (o *GetUserRolesOrRoleUsersInternalServerError) Code() int {
	return 500
}

func (o *GetUserRolesOrRoleUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserRolesOrRoleUsersInternalServerError) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getUserRolesOrRoleUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserRolesOrRoleUsersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUserRolesOrRoleUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetUserRolesOrRoleUsersOKBody get user roles or role users o k body
swagger:model GetUserRolesOrRoleUsersOKBody
*/
type GetUserRolesOrRoleUsersOKBody struct {

	// roles
	Roles []string `json:"roles"`

	// users
	Users []string `json:"users"`
}

// Validate validates this get user roles or role users o k body
func (o *GetUserRolesOrRoleUsersOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get user roles or role users o k body based on context it is used
func (o *GetUserRolesOrRoleUsersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetUserRolesOrRoleUsersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserRolesOrRoleUsersOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserRolesOrRoleUsersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
