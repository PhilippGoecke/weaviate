//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/weaviate/weaviate/entities/models"
)

// GetRolesForUsersReader is a Reader for the GetRolesForUsers structure.
type GetRolesForUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRolesForUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRolesForUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRolesForUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRolesForUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRolesForUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRolesForUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRolesForUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRolesForUsersOK creates a GetRolesForUsersOK with default headers values
func NewGetRolesForUsersOK() *GetRolesForUsersOK {
	return &GetRolesForUsersOK{}
}

/*
GetRolesForUsersOK describes a response with status code 200, with default header values.

Role assigned users
*/
type GetRolesForUsersOK struct {
	Payload []string
}

// IsSuccess returns true when this get roles for users o k response has a 2xx status code
func (o *GetRolesForUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get roles for users o k response has a 3xx status code
func (o *GetRolesForUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users o k response has a 4xx status code
func (o *GetRolesForUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get roles for users o k response has a 5xx status code
func (o *GetRolesForUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get roles for users o k response a status code equal to that given
func (o *GetRolesForUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get roles for users o k response
func (o *GetRolesForUsersOK) Code() int {
	return 200
}

func (o *GetRolesForUsersOK) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersOK  %+v", 200, o.Payload)
}

func (o *GetRolesForUsersOK) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersOK  %+v", 200, o.Payload)
}

func (o *GetRolesForUsersOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRolesForUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRolesForUsersBadRequest creates a GetRolesForUsersBadRequest with default headers values
func NewGetRolesForUsersBadRequest() *GetRolesForUsersBadRequest {
	return &GetRolesForUsersBadRequest{}
}

/*
GetRolesForUsersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetRolesForUsersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get roles for users bad request response has a 2xx status code
func (o *GetRolesForUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get roles for users bad request response has a 3xx status code
func (o *GetRolesForUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users bad request response has a 4xx status code
func (o *GetRolesForUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get roles for users bad request response has a 5xx status code
func (o *GetRolesForUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get roles for users bad request response a status code equal to that given
func (o *GetRolesForUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get roles for users bad request response
func (o *GetRolesForUsersBadRequest) Code() int {
	return 400
}

func (o *GetRolesForUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRolesForUsersBadRequest) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetRolesForUsersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRolesForUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRolesForUsersUnauthorized creates a GetRolesForUsersUnauthorized with default headers values
func NewGetRolesForUsersUnauthorized() *GetRolesForUsersUnauthorized {
	return &GetRolesForUsersUnauthorized{}
}

/*
GetRolesForUsersUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type GetRolesForUsersUnauthorized struct {
}

// IsSuccess returns true when this get roles for users unauthorized response has a 2xx status code
func (o *GetRolesForUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get roles for users unauthorized response has a 3xx status code
func (o *GetRolesForUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users unauthorized response has a 4xx status code
func (o *GetRolesForUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get roles for users unauthorized response has a 5xx status code
func (o *GetRolesForUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get roles for users unauthorized response a status code equal to that given
func (o *GetRolesForUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get roles for users unauthorized response
func (o *GetRolesForUsersUnauthorized) Code() int {
	return 401
}

func (o *GetRolesForUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersUnauthorized ", 401)
}

func (o *GetRolesForUsersUnauthorized) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersUnauthorized ", 401)
}

func (o *GetRolesForUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesForUsersForbidden creates a GetRolesForUsersForbidden with default headers values
func NewGetRolesForUsersForbidden() *GetRolesForUsersForbidden {
	return &GetRolesForUsersForbidden{}
}

/*
GetRolesForUsersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRolesForUsersForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get roles for users forbidden response has a 2xx status code
func (o *GetRolesForUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get roles for users forbidden response has a 3xx status code
func (o *GetRolesForUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users forbidden response has a 4xx status code
func (o *GetRolesForUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get roles for users forbidden response has a 5xx status code
func (o *GetRolesForUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get roles for users forbidden response a status code equal to that given
func (o *GetRolesForUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get roles for users forbidden response
func (o *GetRolesForUsersForbidden) Code() int {
	return 403
}

func (o *GetRolesForUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetRolesForUsersForbidden) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersForbidden  %+v", 403, o.Payload)
}

func (o *GetRolesForUsersForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRolesForUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRolesForUsersNotFound creates a GetRolesForUsersNotFound with default headers values
func NewGetRolesForUsersNotFound() *GetRolesForUsersNotFound {
	return &GetRolesForUsersNotFound{}
}

/*
GetRolesForUsersNotFound describes a response with status code 404, with default header values.

no role found for user/key
*/
type GetRolesForUsersNotFound struct {
}

// IsSuccess returns true when this get roles for users not found response has a 2xx status code
func (o *GetRolesForUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get roles for users not found response has a 3xx status code
func (o *GetRolesForUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users not found response has a 4xx status code
func (o *GetRolesForUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get roles for users not found response has a 5xx status code
func (o *GetRolesForUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get roles for users not found response a status code equal to that given
func (o *GetRolesForUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get roles for users not found response
func (o *GetRolesForUsersNotFound) Code() int {
	return 404
}

func (o *GetRolesForUsersNotFound) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersNotFound ", 404)
}

func (o *GetRolesForUsersNotFound) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersNotFound ", 404)
}

func (o *GetRolesForUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesForUsersInternalServerError creates a GetRolesForUsersInternalServerError with default headers values
func NewGetRolesForUsersInternalServerError() *GetRolesForUsersInternalServerError {
	return &GetRolesForUsersInternalServerError{}
}

/*
GetRolesForUsersInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type GetRolesForUsersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get roles for users internal server error response has a 2xx status code
func (o *GetRolesForUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get roles for users internal server error response has a 3xx status code
func (o *GetRolesForUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get roles for users internal server error response has a 4xx status code
func (o *GetRolesForUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get roles for users internal server error response has a 5xx status code
func (o *GetRolesForUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get roles for users internal server error response a status code equal to that given
func (o *GetRolesForUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get roles for users internal server error response
func (o *GetRolesForUsersInternalServerError) Code() int {
	return 500
}

func (o *GetRolesForUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRolesForUsersInternalServerError) String() string {
	return fmt.Sprintf("[GET /authz/users][%d] getRolesForUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRolesForUsersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetRolesForUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetRolesForUsersBody RBAC role assignment request
swagger:model GetRolesForUsersBody
*/
type GetRolesForUsersBody struct {

	// the role that the key/user assigned to
	Role string `json:"role,omitempty"`
}

// Validate validates this get roles for users body
func (o *GetRolesForUsersBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get roles for users body based on context it is used
func (o *GetRolesForUsersBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRolesForUsersBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRolesForUsersBody) UnmarshalBinary(b []byte) error {
	var res GetRolesForUsersBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
