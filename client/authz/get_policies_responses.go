//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// GetPoliciesReader is a Reader for the GetPolicies structure.
type GetPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPoliciesOK creates a GetPoliciesOK with default headers values
func NewGetPoliciesOK() *GetPoliciesOK {
	return &GetPoliciesOK{}
}

/*
GetPoliciesOK describes a response with status code 200, with default header values.

Successful response.
*/
type GetPoliciesOK struct {
	Payload models.PoliciesListResponse
}

// IsSuccess returns true when this get policies o k response has a 2xx status code
func (o *GetPoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policies o k response has a 3xx status code
func (o *GetPoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies o k response has a 4xx status code
func (o *GetPoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policies o k response has a 5xx status code
func (o *GetPoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies o k response a status code equal to that given
func (o *GetPoliciesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get policies o k response
func (o *GetPoliciesOK) Code() int {
	return 200
}

func (o *GetPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetPoliciesOK) String() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetPoliciesOK) GetPayload() models.PoliciesListResponse {
	return o.Payload
}

func (o *GetPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesBadRequest creates a GetPoliciesBadRequest with default headers values
func NewGetPoliciesBadRequest() *GetPoliciesBadRequest {
	return &GetPoliciesBadRequest{}
}

/*
GetPoliciesBadRequest describes a response with status code 400, with default header values.

Malformed request.
*/
type GetPoliciesBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get policies bad request response has a 2xx status code
func (o *GetPoliciesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies bad request response has a 3xx status code
func (o *GetPoliciesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies bad request response has a 4xx status code
func (o *GetPoliciesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policies bad request response has a 5xx status code
func (o *GetPoliciesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies bad request response a status code equal to that given
func (o *GetPoliciesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get policies bad request response
func (o *GetPoliciesBadRequest) Code() int {
	return 400
}

func (o *GetPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPoliciesBadRequest) String() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesBadRequest  %+v", 400, o.Payload)
}

func (o *GetPoliciesBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesUnauthorized creates a GetPoliciesUnauthorized with default headers values
func NewGetPoliciesUnauthorized() *GetPoliciesUnauthorized {
	return &GetPoliciesUnauthorized{}
}

/*
GetPoliciesUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type GetPoliciesUnauthorized struct {
}

// IsSuccess returns true when this get policies unauthorized response has a 2xx status code
func (o *GetPoliciesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies unauthorized response has a 3xx status code
func (o *GetPoliciesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies unauthorized response has a 4xx status code
func (o *GetPoliciesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policies unauthorized response has a 5xx status code
func (o *GetPoliciesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies unauthorized response a status code equal to that given
func (o *GetPoliciesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get policies unauthorized response
func (o *GetPoliciesUnauthorized) Code() int {
	return 401
}

func (o *GetPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesUnauthorized ", 401)
}

func (o *GetPoliciesUnauthorized) String() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesUnauthorized ", 401)
}

func (o *GetPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPoliciesForbidden creates a GetPoliciesForbidden with default headers values
func NewGetPoliciesForbidden() *GetPoliciesForbidden {
	return &GetPoliciesForbidden{}
}

/*
GetPoliciesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPoliciesForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get policies forbidden response has a 2xx status code
func (o *GetPoliciesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies forbidden response has a 3xx status code
func (o *GetPoliciesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies forbidden response has a 4xx status code
func (o *GetPoliciesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policies forbidden response has a 5xx status code
func (o *GetPoliciesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies forbidden response a status code equal to that given
func (o *GetPoliciesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get policies forbidden response
func (o *GetPoliciesForbidden) Code() int {
	return 403
}

func (o *GetPoliciesForbidden) Error() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetPoliciesForbidden) String() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesForbidden  %+v", 403, o.Payload)
}

func (o *GetPoliciesForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesInternalServerError creates a GetPoliciesInternalServerError with default headers values
func NewGetPoliciesInternalServerError() *GetPoliciesInternalServerError {
	return &GetPoliciesInternalServerError{}
}

/*
GetPoliciesInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type GetPoliciesInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get policies internal server error response has a 2xx status code
func (o *GetPoliciesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policies internal server error response has a 3xx status code
func (o *GetPoliciesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies internal server error response has a 4xx status code
func (o *GetPoliciesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policies internal server error response has a 5xx status code
func (o *GetPoliciesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get policies internal server error response a status code equal to that given
func (o *GetPoliciesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get policies internal server error response
func (o *GetPoliciesInternalServerError) Code() int {
	return 500
}

func (o *GetPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPoliciesInternalServerError) String() string {
	return fmt.Sprintf("[GET /authz/policies][%d] getPoliciesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPoliciesInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
