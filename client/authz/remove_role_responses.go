//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package authz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/weaviate/weaviate/entities/models"
)

// RemoveRoleReader is a Reader for the RemoveRole structure.
type RemoveRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoveRoleOK creates a RemoveRoleOK with default headers values
func NewRemoveRoleOK() *RemoveRoleOK {
	return &RemoveRoleOK{}
}

/*
RemoveRoleOK describes a response with status code 200, with default header values.

Role removed successfully
*/
type RemoveRoleOK struct {
}

// IsSuccess returns true when this remove role o k response has a 2xx status code
func (o *RemoveRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove role o k response has a 3xx status code
func (o *RemoveRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove role o k response has a 4xx status code
func (o *RemoveRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove role o k response has a 5xx status code
func (o *RemoveRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove role o k response a status code equal to that given
func (o *RemoveRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove role o k response
func (o *RemoveRoleOK) Code() int {
	return 200
}

func (o *RemoveRoleOK) Error() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleOK ", 200)
}

func (o *RemoveRoleOK) String() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleOK ", 200)
}

func (o *RemoveRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveRoleBadRequest creates a RemoveRoleBadRequest with default headers values
func NewRemoveRoleBadRequest() *RemoveRoleBadRequest {
	return &RemoveRoleBadRequest{}
}

/*
RemoveRoleBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RemoveRoleBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this remove role bad request response has a 2xx status code
func (o *RemoveRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove role bad request response has a 3xx status code
func (o *RemoveRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove role bad request response has a 4xx status code
func (o *RemoveRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove role bad request response has a 5xx status code
func (o *RemoveRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove role bad request response a status code equal to that given
func (o *RemoveRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove role bad request response
func (o *RemoveRoleBadRequest) Code() int {
	return 400
}

func (o *RemoveRoleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveRoleBadRequest) String() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveRoleBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemoveRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveRoleUnauthorized creates a RemoveRoleUnauthorized with default headers values
func NewRemoveRoleUnauthorized() *RemoveRoleUnauthorized {
	return &RemoveRoleUnauthorized{}
}

/*
RemoveRoleUnauthorized describes a response with status code 401, with default header values.

Unauthorized or invalid credentials.
*/
type RemoveRoleUnauthorized struct {
}

// IsSuccess returns true when this remove role unauthorized response has a 2xx status code
func (o *RemoveRoleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove role unauthorized response has a 3xx status code
func (o *RemoveRoleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove role unauthorized response has a 4xx status code
func (o *RemoveRoleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove role unauthorized response has a 5xx status code
func (o *RemoveRoleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove role unauthorized response a status code equal to that given
func (o *RemoveRoleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove role unauthorized response
func (o *RemoveRoleUnauthorized) Code() int {
	return 401
}

func (o *RemoveRoleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleUnauthorized ", 401)
}

func (o *RemoveRoleUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleUnauthorized ", 401)
}

func (o *RemoveRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveRoleForbidden creates a RemoveRoleForbidden with default headers values
func NewRemoveRoleForbidden() *RemoveRoleForbidden {
	return &RemoveRoleForbidden{}
}

/*
RemoveRoleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemoveRoleForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this remove role forbidden response has a 2xx status code
func (o *RemoveRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove role forbidden response has a 3xx status code
func (o *RemoveRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove role forbidden response has a 4xx status code
func (o *RemoveRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove role forbidden response has a 5xx status code
func (o *RemoveRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this remove role forbidden response a status code equal to that given
func (o *RemoveRoleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the remove role forbidden response
func (o *RemoveRoleForbidden) Code() int {
	return 403
}

func (o *RemoveRoleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleForbidden  %+v", 403, o.Payload)
}

func (o *RemoveRoleForbidden) String() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleForbidden  %+v", 403, o.Payload)
}

func (o *RemoveRoleForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemoveRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveRoleInternalServerError creates a RemoveRoleInternalServerError with default headers values
func NewRemoveRoleInternalServerError() *RemoveRoleInternalServerError {
	return &RemoveRoleInternalServerError{}
}

/*
RemoveRoleInternalServerError describes a response with status code 500, with default header values.

An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.
*/
type RemoveRoleInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this remove role internal server error response has a 2xx status code
func (o *RemoveRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove role internal server error response has a 3xx status code
func (o *RemoveRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove role internal server error response has a 4xx status code
func (o *RemoveRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove role internal server error response has a 5xx status code
func (o *RemoveRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove role internal server error response a status code equal to that given
func (o *RemoveRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove role internal server error response
func (o *RemoveRoleInternalServerError) Code() int {
	return 500
}

func (o *RemoveRoleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveRoleInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /authz/roles][%d] removeRoleInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveRoleInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RemoveRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
